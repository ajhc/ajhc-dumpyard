-- ajhc Main.hs --ignore-cache -dcore -dcore-afterlift -dcore-beforelift -dcore-initial -dcore-mangled -dcore-mini -dcore-pass -dcore-steps -ddatatable -ddatatable-builtin -de-alias -de-info -de-verbose -doptimization-stats -drules -drules-spec -dgrin -dgrin-datalog -dgrin-final -dgrin-graph -dgrin-initial -dgrin-normalized -dgrin-posteval -dgrin-preeval -dsteps -dtags -dc
-- ajhc 0.8.0.6 (54d1b9f6c7a5d644a9bf019e6871c46abace4a1a)


[Arity 2 False,\\ArT,<2,[S,L]>,[],UseInfo {useOccurance = Many, minimumArgs = 2},λλ(#2#)(⊤,Jhc.Prim.Prim.())]
Prelude.IO.putStrLn :: String → IO@(Λx1.
    ST@(Λx1.Λx2.
    State_ (x1[]∷*) → (# State_ (x1[]∷*), x2[]∷* #)) RealWorld (x1[]∷*)) ()
Prelude.IO.putStrLn :: ΠPrelude.IO.5_s[S,[],{}]∷String.
                       Πx86244773[L,[],{}]∷RealWorld_.
    (# RealWorld_, () #)
Prelude.IO.putStrLn = λPrelude.IO.5_s[S,[],{}]∷String.
                      λx86244773[L,[],{}]∷RealWorld_.
    let
      Jhc.Monad.72_go[Arity 2 False,\\ArT,S(S(S)),<1,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷String → IO@(Λx1.
        ST@(Λx1.Λx2.
        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                          , x2[]∷* #)) RealWorld (x1[]∷*)) () =
        λx8[S,[],{}]∷String.λx57580224[]∷RealWorld_.
        case __[[],{}]∷String <- x8[S,[],{}]∷String of
          (x9[[],{}]∷Char):(x10[[],{}]∷String) →
            case __[[],{}]∷Char <- x9[[],{}]∷Char of
              Char (x22362699[[],{}]∷Char_@(bits32)) →
                case <(bits32)ConvOp B2B bits32 (x22362699[[],{}]∷Char_@(bits32))∷bits32> of
                  x28751270[[],{}]∷bits32 →
                    case <(void)jhc_utf8_putchar(int) (x57580224[]∷RealWorld_) (x28751270[[],{}]∷bits32)∷RealWorld_> of
                      x93[[],{}]∷RealWorld_ →
                        (Jhc.Monad.72_go[Arity 2 False,\\ArT,S(S(S)),<1,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷String → IO@(Λx1.
                        ST@(Λx1.Λx2.
                        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                          , x2[]∷* #)) RealWorld (x1[]∷*)) ()) (x10[[],{}]∷String) (x93[[],{}]∷RealWorld_);∷(# RealWorld_
                                                                                                                            , () #);∷(# RealWorld_
                                                                                                                                     , () #);∷(# RealWorld_
                                                                                                                                              , () #);
          [] → (# x57580224[]∷RealWorld_, () #);∷(# RealWorld_, () #);
      in case __[[],{}]∷(# RealWorld_
                        , () #) <- (Jhc.Monad.72_go[Arity 2 False,\\ArT,S(S(S)),<1,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷String → IO@(Λx1.
        ST@(Λx1.Λx2.
        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                          , x2[]∷* #)) RealWorld (x1[]∷*)) ()) (Prelude.IO.5_s[S,[],{}]∷String) (x86244773[L,[],{}]∷RealWorld_) of
        (# x35611923[[],{}]∷RealWorld_, x126380998[[],{}]∷() #) →
          case <(void)jhc_utf8_putchar(int) (x35611923[[],{}]∷RealWorld_) (10∷bits32)∷RealWorld_> of
            x19882417[[],{}]∷RealWorld_ → (# x19882417[[],{}]∷RealWorld_
                                          , () #);∷(# RealWorld_
                                                   , () #);∷(# RealWorld_, () #)

[Arity 1 False,\ArT,<1,[L]>,[],UseInfo {useOccurance = Many, minimumArgs = 1},λ(#2#)(⊤,Jhc.Type.Basic.Char(⊤))]
Prelude.IO.getChar :: IO@(Λx1.
    ST@(Λx1.Λx2.
    State_ (x1[]∷*) → (# State_ (x1[]∷*), x2[]∷* #)) RealWorld (x1[]∷*)) Char
Prelude.IO.getChar :: Πx3440983[L,[],{}]∷RealWorld_. (# RealWorld_, Char #)
Prelude.IO.getChar = λx3440983[L,[],{}]∷RealWorld_.
    case __[[],{}]∷(# RealWorld_
                   , bits32 #) <- <(int)jhc_utf8_getchar() (x3440983[L,[],{}]∷RealWorld_)∷(# RealWorld_
                                                                                          , bits32 #)> of
      (# x41689642[[],{}]∷RealWorld_, x79201643[[],{}]∷bits32 #) →
        case x79201643[[],{}]∷bits32 of
          -1∷bits32 → let
              R@.fJhc.IO.putErrLn[Arity 2 False,\\ArT,Err,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ(#2#)(⊤,Jhc.Prim.Prim.())]∷String → IO@(Λx1.
                ST@(Λx1.Λx2.
                State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                  , x2[]∷* #)) RealWorld (x1[]∷*)) () =
                λx59774545[S,[],{}]∷String.λx59774544[L,[],{}]∷RealWorld_.
                case __[[],{}]∷String <- x59774545[S,[],{}]∷String of
                  (x39[[],{}]∷Char):(x40[[],{}]∷String) →
                    case __[[],{}]∷Char <- x39[[],{}]∷Char of
                      Char (x108042543[[],{}]∷Char_@(bits32)) →
                        case <(bits32)ConvOp U2U bits32 (x108042543[[],{}]∷Char_@(bits32))∷bits32> of
                          x62470115[[],{}]∷bits32 →
                            case <(void)jhc_utf8_putchar(int) (x59774544[L,[],{}]∷RealWorld_) (x62470115[[],{}]∷bits32)∷RealWorld_> of
                              x49[[],{}]∷RealWorld_ →
                                (R@.fJhc.IO.putErrLn[Arity 2 False,\\ArT,Err,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ(#2#)(⊤,Jhc.Prim.Prim.())]∷String → IO@(Λx1.
                                ST@(Λx1.Λx2.
                                State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                                  , x2[]∷* #)) RealWorld (x1[]∷*)) ()) (x40[[],{}]∷String) (x49[[],{}]∷RealWorld_);∷(# RealWorld_
                                                                                                                                    , () #);∷(# RealWorld_
                                                                                                                                             , () #);∷(# RealWorld_
                                                                                                                                                      , () #);
                  [] →
                    case <(void)jhc_utf8_putchar(int) (x59774544[L,[],{}]∷RealWorld_) (10∷bits32)∷RealWorld_> of
                      x108042547[[],{}]∷RealWorld_ →
                        (# x108042547[[],{}]∷RealWorld_, () #);∷(# RealWorld_
                                                                , () #);∷(# RealWorld_
                                                                         , () #);
              in case __[[],{}]∷(# RealWorld_
                                , () #) <- (R@.fJhc.IO.putErrLn[Arity 2 False,\\ArT,Err,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ(#2#)(⊤,Jhc.Prim.Prim.())]∷String → IO@(Λx1.
                ST@(Λx1.Λx2.
                State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                  , x2[]∷* #)) RealWorld (x1[]∷*)) ()) "End of file." (x41689642[[],{}]∷RealWorld_) of
                (# x64009303[[],{}]∷RealWorld_, x122213767[[],{}]∷() #) →
                  <exitFailure∷(# RealWorld_, Char #)>;∷(# RealWorld_, Char #);
          _[[],{}]∷bits32 →
            case <(bits32)ConvOp B2B bits32 (x79201643[[],{}]∷bits32)∷Char_@(bits32)> of
              x109164415[[],{}]∷Char_@(bits32) → let
                  x29474632[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤)]∷Char =
                    Char (x109164415[[],{}]∷Char_@(bits32));
                  in (# x41689642[[],{}]∷RealWorld_
                     , x29474632[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤)]∷Char #);∷(# RealWorld_
                                                                                                                                                  , Char #);∷(# RealWorld_
                                                                                                                                                             , Char #);∷(# RealWorld_
                                                                                                                                                                        , Char #)

[Arity 2 False,\\ArT,<2,[L,L]>,[_WORKER],UseInfo {useOccurance = Many, minimumArgs = 2},λλJhc.Type.Basic.Char(⊤):⊤]
W@.fJhc.Inst.Show.showWord :: bits32 → String → String
W@.fJhc.Inst.Show.showWord :: ΠX@.fJhc.Inst.Show.41_w@1[L,[],{}]∷bits32.
                              ΠJhc.Inst.Show.42_rest[L,[],{}]∷String.
    String
W@.fJhc.Inst.Show.showWord = λX@.fJhc.Inst.Show.41_w@1[L,[],{}]∷bits32.
                             λJhc.Inst.Show.42_rest[L,[],{}]∷String.
    let
      W@.fR@.fJhc.Inst.Show.showWord[Arity 2 False,\\ArT,S(S(S)),<2,[L,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλJhc.Type.Basic.Char(⊤):⊤]∷bits32 → String → String =
        λx14767373[L,[],{}]∷bits32.λx20202872[L,[],{}]∷String.
        case <(bits32)UDiv (x14767373[L,[],{}]∷bits32) (10∷bits32)∷bits32> of
          x20202870[]∷bits32 →
            case <(bits32)UMod (x14767373[L,[],{}]∷bits32) (10∷bits32)∷bits32> of
              x126734477[]∷bits32 →
                case <(bits<max>)ConvOp Zx bits32 (x126734477[]∷bits32)∷bits<max>> of
                  x97317566[[],{}]∷bits<max> →
                    case <(bits32)ConvOp Lobits bits<max> (x97317566[[],{}]∷bits<max>)∷bits32> of
                      x121079992[[],{}]∷bits32 →
                        case <(bits32)Add (48∷bits32) (x121079992[[],{}]∷bits32)∷bits32> of
                          x132502398[[],{}]∷bits32 →
                            case <(bits32)ConvOp B2B bits32 (x132502398[[],{}]∷bits32)∷Char_@(bits32)> of
                              x79969310[[],{}]∷Char_@(bits32) → let
                                  x82682902[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤)]∷Char =
                                    Char (x79969310[[],{}]∷Char_@(bits32));
                                  in case x20202870[]∷bits32 of
                                    0∷bits32 →
                                      (x82682902[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤)]∷Char):(x20202872[L,[],{}]∷String);
                                    _[[],{}]∷bits32 → let
                                        Jhc.Inst.Show.45_rest'[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤):⊤]∷String =
                                          (x82682902[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤)]∷Char):(x20202872[L,[],{}]∷String);
                                        in
                                        (W@.fR@.fJhc.Inst.Show.showWord[Arity 2 False,\\ArT,S(S(S)),<2,[L,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλJhc.Type.Basic.Char(⊤):⊤]∷bits32 → String → String) (x20202870[]∷bits32) (Jhc.Inst.Show.45_rest'[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤):⊤]∷String);∷String;∷String;∷String;∷String;∷String;∷String;∷String;
      in
      (W@.fR@.fJhc.Inst.Show.showWord[Arity 2 False,\\ArT,S(S(S)),<2,[L,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλJhc.Type.Basic.Char(⊤):⊤]∷bits32 → String → String) (X@.fJhc.Inst.Show.41_w@1[L,[],{}]∷bits32) (Jhc.Inst.Show.42_rest[L,[],{}]∷String)

[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]
Jhc.Basics.++ :: String → String → String
Jhc.Basics.++ :: Πx51[S,[],{}]∷String.Πx52[L,[],{}]∷String. String
Jhc.Basics.++ = λx51[S,[],{}]∷String.λx52[L,[],{}]∷String.
    (R@.fJhc.Basics.++[Arity 2 False,\\ArT,S(S(S)),<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷String → String → String) (x51[S,[],{}]∷String) (x52[L,[],{}]∷String)

[Arity 2 False,\\ArT,S(S(S)),<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]
R@.fJhc.Basics.++ :: String → String → String
R@.fJhc.Basics.++ :: Πx14767371[S,[],{}]∷String.Πx14767370[L,[],{}]∷String.
    String
R@.fJhc.Basics.++ = λx14767371[S,[],{}]∷String.λx14767370[L,[],{}]∷String.
    case __[[],{}]∷String <- x14767371[S,[],{}]∷String of
      (x53[[],{}]∷Char):(x54[[],{}]∷String) → let
          x34917223[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String =
            (R@.fJhc.Basics.++[Arity 2 False,\\ArT,S(S(S)),<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷String → String → String) (x54[[],{}]∷String) (x14767370[L,[],{}]∷String);
          in
          (x53[[],{}]∷Char):(x34917223[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String);
      [] → x14767370[L,[],{}]∷String;∷String

[Arity 2 False,\\ArT,<2,[L,L]>,[_CYCLIC,_WORKER],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]
W@.fPrelude.Text.showLitChar :: Char_@(bits32) → String → String
W@.fPrelude.Text.showLitChar :: ΠX@.fx150@1[L,[],{}]∷Char_@(bits32).
                                Πx119514817[L,[],{}]∷String.
    String
W@.fPrelude.Text.showLitChar = λX@.fx150@1[L,[],{}]∷Char_@(bits32).
                               λx119514817[L,[],{}]∷String.
    case __[[],{}]∷Bool_@(bits16) <- <(bits16)BinOp ULt bits32 bits32 '\DEL'# (X@.fx150@1[L,[],{}]∷Char_@(bits32))∷Jhc.Prim.Prim.Bool#@(bits16)> of
      True# →
        case <(bits32)ConvOp B2B bits32 (X@.fx150@1[L,[],{}]∷Char_@(bits32))∷bits32> of
          x103062544[[],{}]∷bits32 → let
              x78966318[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤):⊤]∷String =
                (W@.fPrelude.Text.showLitChar$3[]∷Πx22105519[]∷String.
                                                  Πx103062544[]∷bits32.
                String) (x22105519[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String) (x103062544[[],{}]∷bits32);
              x22105519[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String =
                (W@.fPrelude.Text.showLitChar$2[]∷Πx119514817[]∷String.
                String) (x119514817[L,[],{}]∷String);
              in
              '\\':(x78966318[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤):⊤]∷String);∷String;
      False# → case X@.fx150@1[L,[],{}]∷Char_@(bits32) of
          '\\'# →
            (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\\\" (x119514817[L,[],{}]∷String);
          '\DEL'# →
            (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\DEL" (x119514817[L,[],{}]∷String);
          x19069424[[],{}]∷Char_@(bits32) →
            case __[[],{}]∷Bool_@(bits16) <- <(bits16)BinOp ULte bits32 bits32 ' '# (X@.fx150@1[L,[],{}]∷Char_@(bits32))∷Jhc.Prim.Prim.Bool#@(bits16)> of
              True# → let
                  x8964092[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤)]∷Char =
                    Char (X@.fx150@1[L,[],{}]∷Char_@(bits32));
                  in
                  (x8964092[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤)]∷Char):(x119514817[L,[],{}]∷String);
              False# → case x19069424[[],{}]∷Char_@(bits32) of
                  '\a'# →
                    (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\a" (x119514817[L,[],{}]∷String);
                  '\b'# →
                    (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\b" (x119514817[L,[],{}]∷String);
                  '\t'# →
                    (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\t" (x119514817[L,[],{}]∷String);
                  '\n'# →
                    (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\n" (x119514817[L,[],{}]∷String);
                  '\v'# →
                    (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\v" (x119514817[L,[],{}]∷String);
                  '\f'# →
                    (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\f" (x119514817[L,[],{}]∷String);
                  '\r'# →
                    (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\r" (x119514817[L,[],{}]∷String);
                  '\SO'# → let
                      x14263551[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String =
                        (W@.fPrelude.Text.showLitChar$4[]∷Πx119514817[]∷String.
                        String) (x119514817[L,[],{}]∷String);
                      in
                      (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\SO" (x14263551[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String);
                  _[[],{}]∷Char_@(bits32) →
                    case <(bits32)ConvOp B2B bits32 (X@.fx150@1[L,[],{}]∷Char_@(bits32))∷bits32> of
                      x8895677[[],{}]∷bits32 → let
                          x32039456[Arity 0 False,ArT,S,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(92):⊤]∷String =
                            '\\':(x47046984[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String);
                          x47046984[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String =
                            (W@.fPrelude.Text.showLitChar$5[]∷Πx8895677[]∷bits32.
                            String) (x8895677[[],{}]∷bits32);
                          in
                          (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) (x32039456[Arity 0 False,ArT,S,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(92):⊤]∷String) (x119514817[L,[],{}]∷String);∷String;∷String;∷String;∷String;∷String

[[]]
W@.fPrelude.Text.showLitChar$2 :: Πx119514817[]∷String. String
W@.fPrelude.Text.showLitChar$2 :: Πx119514817[L,[],{}]∷String. String
W@.fPrelude.Text.showLitChar$2 = λx119514817[L,[],{}]∷String.
    case __[[],{}]∷String <- x119514817[L,[],{}]∷String of
      (x2620[[],{}]∷Char):(x2621[[],{}]∷String) →
        case __[[],{}]∷Char <- x2620[[],{}]∷Char of
          Char (x104754015[[],{}]∷Char_@(bits32)) →
            case __[[],{}]∷Jhc.Prim.Prim.Bool#@(bits16) <- <(bits16)BinOp ULte bits32 bits32 '0'# (x104754015[[],{}]∷Char_@(bits32))∷Jhc.Prim.Prim.Bool#@(bits16)> of
              0∷Jhc.Prim.Prim.Bool#@(bits16) →
                (x2620[[],{}]∷Char):(x2621[[],{}]∷String);
              1∷Jhc.Prim.Prim.Bool#@(bits16) →
                case __[[],{}]∷Bool_@(bits16) <- <(bits16)BinOp UGte bits32 bits32 '9'# (x104754015[[],{}]∷Char_@(bits32))∷Jhc.Prim.Prim.Bool#@(bits16)> of
                  True# →
                    (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\&" (x119514817[L,[],{}]∷String);
                  False# →
                    (x2620[[],{}]∷Char):(x2621[[],{}]∷String);∷String;∷String;∷String;
      [] → "";∷String

[[]]
W@.fPrelude.Text.showLitChar$3 :: Πx22105519[]∷String.Πx103062544[]∷bits32.
    String
W@.fPrelude.Text.showLitChar$3 :: Πx22105519[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String.
                                  Πx103062544[[],{}]∷bits32.
    String
W@.fPrelude.Text.showLitChar$3 = λx22105519[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String.
                                 λx103062544[[],{}]∷bits32.
    case __[[],{}]∷Bool_@(bits16) <- <(bits16)BinOp Gt bits32 bits32 (0∷bits32) (x103062544[[],{}]∷bits32)∷Jhc.Prim.Prim.Bool#@(bits16)> of
      True# → case <(bits32)Neg (x103062544[[],{}]∷bits32)∷bits32> of
          x114031217[[],{}]∷bits32 →
            case <(bits<max>)ConvOp Sx bits32 (x114031217[[],{}]∷bits32)∷bits<max>> of
              x98167653[[],{}]∷bits<max> →
                case <(bits32)ConvOp Lobits bits<max> (x98167653[[],{}]∷bits<max>)∷bits32> of
                  x25637426[[],{}]∷bits32 → let
                      x86415904[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤):⊤]∷String =
                        (W@.fJhc.Inst.Show.showWord[Arity 2 False,\\ArT,<2,[L,L]>,[_WORKER],UseInfo {useOccurance = Many, minimumArgs = 2},λλJhc.Type.Basic.Char(⊤):⊤]∷bits32 → String → String) (x25637426[[],{}]∷bits32) (x22105519[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String);
                      in
                      '-':(x86415904[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},Jhc.Type.Basic.Char(⊤):⊤]∷String);∷String;∷String;∷String;
      False# →
        case <(bits<max>)ConvOp Sx bits32 (x103062544[[],{}]∷bits32)∷bits<max>> of
          x76740124[[],{}]∷bits<max> →
            case <(bits32)ConvOp Lobits bits<max> (x76740124[[],{}]∷bits<max>)∷bits32> of
              x60417406[[],{}]∷bits32 →
                (W@.fJhc.Inst.Show.showWord[Arity 2 False,\\ArT,<2,[L,L]>,[_WORKER],UseInfo {useOccurance = Many, minimumArgs = 2},λλJhc.Type.Basic.Char(⊤):⊤]∷bits32 → String → String) (x60417406[[],{}]∷bits32) (x22105519[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String);∷String;∷String;∷String

[[]]
W@.fPrelude.Text.showLitChar$4 :: Πx119514817[]∷String. String
W@.fPrelude.Text.showLitChar$4 :: Πx119514817[L,[],{}]∷String. String
W@.fPrelude.Text.showLitChar$4 = λx119514817[L,[],{}]∷String.
    case __[[],{}]∷String <- x119514817[L,[],{}]∷String of
      (x10186979[[],{}]∷Char):(x111257221[[],{}]∷String) →
        case __[[],{}]∷Char <- x10186979[[],{}]∷Char of
          Char (x93300608[[],{}]∷Char_@(bits32)) →
            case x93300608[[],{}]∷Char_@(bits32) of
              'H'# →
                (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\&" (x119514817[L,[],{}]∷String);
              _[[],{}]∷Char_@(bits32) →
                (x10186979[[],{}]∷Char):(x111257221[[],{}]∷String);∷String;∷String;
      [] → "";∷String

[Arity 2 False,\\ArT,S(S(S)),<2,[S,S]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]
W@.fR@.fJhc.List.243_sub :: [String] → bits32 → String
W@.fR@.fJhc.List.243_sub :: Πx57580219[S,[],{}]∷[String].
                            Πx62470112[S,[],{}]∷bits32.
    String
W@.fR@.fJhc.List.243_sub = λx57580219[S,[],{}]∷[String].
                           λx62470112[S,[],{}]∷bits32.
    case __[[],{}]∷[String] <- x57580219[S,[],{}]∷[String] of
      (x66[[],{}]∷String):(x67[[],{}]∷[String]) →
        case x62470112[S,[],{}]∷bits32 of
          0∷bits32 → x66[[],{}]∷String;
          _[[],{}]∷bits32 →
            case <(bits32)Sub (x62470112[S,[],{}]∷bits32) (1∷bits32)∷bits32> of
              x89203822[[],{}]∷bits32 →
                (W@.fR@.fJhc.List.243_sub[Arity 2 False,\\ArT,S(S(S)),<2,[S,S]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷[String] → bits32 → String) (x67[[],{}]∷[String]) (x89203822[[],{}]∷bits32);∷String;∷String;
      [] → <⊥:Prelude.error: Prelude.(!!): index too large∷String>;∷String

[[]]
W@.fPrelude.Text.showLitChar$5 :: Πx8895677[]∷bits32. String
W@.fPrelude.Text.showLitChar$5 :: Πx8895677[[],{}]∷bits32. String
W@.fPrelude.Text.showLitChar$5 = λx8895677[[],{}]∷bits32.
    case __[[],{}]∷Bool_@(bits16) <- <(bits16)BinOp Gt bits32 bits32 (0∷bits32) (x8895677[[],{}]∷bits32)∷Jhc.Prim.Prim.Bool#@(bits16)> of
      True# → <⊥:Prelude.error: Prelude.(!!): negative index∷String>;
      False# →
        (W@.fR@.fJhc.List.243_sub[Arity 2 False,\\ArT,S(S(S)),<2,[S,S]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷[String] → bits32 → String) ["NUL"
                                                                                                                                                                            ,"SOH"
                                                                                                                                                                            ,"STX"
                                                                                                                                                                            ,"ETX"
                                                                                                                                                                            ,"EOT"
                                                                                                                                                                            ,"ENQ"
                                                                                                                                                                            ,"ACK"
                                                                                                                                                                            ,"BEL"
                                                                                                                                                                            ,"BS"
                                                                                                                                                                            ,"HT"
                                                                                                                                                                            ,"LF"
                                                                                                                                                                            ,"VT"
                                                                                                                                                                            ,"FF"
                                                                                                                                                                            ,"CR"
                                                                                                                                                                            ,"SO"
                                                                                                                                                                            ,"SI"
                                                                                                                                                                            ,"DLE"
                                                                                                                                                                            ,"DC1"
                                                                                                                                                                            ,"DC2"
                                                                                                                                                                            ,"DC3"
                                                                                                                                                                            ,"DC4"
                                                                                                                                                                            ,"NAK"
                                                                                                                                                                            ,"SYN"
                                                                                                                                                                            ,"ETB"
                                                                                                                                                                            ,"CAN"
                                                                                                                                                                            ,"EM"
                                                                                                                                                                            ,"SUB"
                                                                                                                                                                            ,"ESC"
                                                                                                                                                                            ,"FS"
                                                                                                                                                                            ,"GS"
                                                                                                                                                                            ,"RS"
                                                                                                                                                                            ,"US"
                                                                                                                                                                            ,"SP"] (x8895677[[],{}]∷bits32);∷String

[Arity 1 False,\ArT,<1,[L]>,[_INSTANCE],UseInfo {useOccurance = Many, minimumArgs = 1},λJhc.Type.Basic.Char(⊤):⊤]
Instance@.iJhc.Show.show.default :: String → String
Instance@.iJhc.Show.show.default :: ΠJhc.Show.8_x[L,[],{}]∷String. String
Instance@.iJhc.Show.show.default = λJhc.Show.8_x[L,[],{}]∷String.
    let
      x21733540[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String =
        (Prelude.Text.30_showl[Arity 2 False,\\ArT,L,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷String → String → String) (Jhc.Show.8_x[L,[],{}]∷String) "";
      in
      '"':(x21733540[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String)

[Arity 2 False,\\ArT,L,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]
Prelude.Text.30_showl :: String → String → String
Prelude.Text.30_showl :: Πx141[S,[],{}]∷String.Πx56615939[L,[],{}]∷String.
    String
Prelude.Text.30_showl = λx141[S,[],{}]∷String.λx56615939[L,[],{}]∷String.
    case __[[],{}]∷String <- x141[S,[],{}]∷String of
      (x142[[],{}]∷Char):(x143[[],{}]∷String) →
        case __[[],{}]∷Char <- x142[[],{}]∷Char of
          Char (x145[[],{}]∷Char_@(bits32)) → case x145[[],{}]∷Char_@(bits32) of
              '"'# → let
                  x73520031[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String =
                    (Prelude.Text.30_showl[Arity 2 False,\\ArT,L,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷String → String → String) (x143[[],{}]∷String) (x56615939[L,[],{}]∷String);
                  in
                  (Jhc.Basics.++[Arity 2 False,\\ArT,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷String → String → String) "\\\"" (x73520031[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String);
              _[[],{}]∷Char_@(bits32) → let
                  x108398669[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String =
                    (Prelude.Text.30_showl[Arity 2 False,\\ArT,L,<2,[S,L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λλ⊤]∷String → String → String) (x143[[],{}]∷String) (x56615939[L,[],{}]∷String);
                  in
                  (W@.fPrelude.Text.showLitChar[Arity 2 False,\\ArT,<2,[L,L]>,[_CYCLIC,_WORKER],UseInfo {useOccurance = Many, minimumArgs = 2},λλ⊤]∷Char_@(bits32) → String → String) (x145[[],{}]∷Char_@(bits32)) (x108398669[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷String);∷String;∷String;
      [] → '"':(x56615939[L,[],{}]∷String);∷String

[Arity 1 False,\ArT,<1,[L]>,[_EXPORTED],UseInfo {useOccurance = Many, minimumArgs = 0},λ⊤]
theMain :: RealWorld_ → RealWorld_
theMain :: Πx1[L,[],{}]∷RealWorld_. RealWorld_
theMain = λx1[L,[],{}]∷RealWorld_.
    let
      R@.fPrelude.IO.getLine[Arity 1 False,\ArT,S(S),<1,[L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λ(#2#)(⊤,⊤)]∷RealWorld_ → (# RealWorld_
                                                                                                                                                          , String #) =
        λx24959786[L,[],{}]∷RealWorld_.
        case __[[],{}]∷(# RealWorld_
                       , Char #) <- (Prelude.IO.getChar[Arity 1 False,\ArT,<1,[L]>,[],UseInfo {useOccurance = Many, minimumArgs = 1},λ(#2#)(⊤,Jhc.Type.Basic.Char(⊤))]∷IO@(Λx1.
          ST@(Λx1.Λx2.
          State_ (x1[]∷*) → (# State_ (x1[]∷*)
                            , x2[]∷* #)) RealWorld (x1[]∷*)) Char) (x24959786[L,[],{}]∷RealWorld_) of
          (# x5329693[[],{}]∷RealWorld_, x3719461[[],{}]∷Char #) →
            case __[[],{}]∷Char <- x3719461[[],{}]∷Char of
              Char (x102579633[[],{}]∷Char_@(bits32)) →
                case x102579633[[],{}]∷Char_@(bits32) of
                  '\n'# → (# x5329693[[],{}]∷RealWorld_, "" #);
                  _[[],{}]∷Char_@(bits32) → case __[[],{}]∷(# RealWorld_
                                                           , String #) <- (R@.fPrelude.IO.getLine[Arity 1 False,\ArT,S(S),<1,[L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λ(#2#)(⊤,⊤)]∷RealWorld_ → (# RealWorld_
                                                                                                                                                                                                                               , String #)) (x5329693[[],{}]∷RealWorld_) of
                      (# x24300047[[],{}]∷RealWorld_
                      , x50806566[[],{}]∷String #) → let
                          x5472895[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤:⊤]∷String =
                            (x3719461[[],{}]∷Char):(x50806566[[],{}]∷String);
                          in (# x24300047[[],{}]∷RealWorld_
                             , x5472895[Arity 0 False,ArT,L,<0,[]>,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤:⊤]∷String #);∷(# RealWorld_
                                                                                                                                        , String #);∷(# RealWorld_
                                                                                                                                                     , String #);∷(# RealWorld_
                                                                                                                                                                  , String #);∷(# RealWorld_
                                                                                                                                                                               , String #);
      in case __[Level 1,[],{}]∷(# RealWorld_
                                , String #) <- (R@.fPrelude.IO.getLine[Arity 1 False,\ArT,S(S),<1,[L]>,[_CYCLIC],UseInfo {useOccurance = LoopBreaker, minimumArgs = 0},{},λ(#2#)(⊤,⊤)]∷RealWorld_ → (# RealWorld_
                                                                                                                                                                                                    , String #)) (x1[L,[],{}]∷RealWorld_) of
        (# x14767372[Level 1,[],{}]∷RealWorld_
        , x36893216[Level 1,[],{}]∷String #) → let
            x49083826[Arity 1 False,\ArT,CLevel (Level 1),L,<1,[L]>,Level 1,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},λ(#2#)(⊤,Jhc.Prim.Prim.())]∷IO@(Λx1.
              ST@(Λx1.Λx2.
              State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                , x2[]∷* #)) RealWorld (x1[]∷*)) () =
              (theMain$2[]∷Πx36893216[]∷String.Πx83084204[]∷RealWorld_.
              (# RealWorld_, () #)) (x36893216[Level 1,[],{}]∷String);
            in
            case <toBang_ (x49083826[Arity 1 False,\ArT,CLevel (Level 1),L,<1,[L]>,Level 1,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},λ(#2#)(⊤,Jhc.Prim.Prim.())]∷IO@(Λx1.
              ST@(Λx1.Λx2.
              State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                , x2[]∷* #)) RealWorld (x1[]∷*)) ())∷Bang_ (IO@(Λx1.
              ST@(Λx1.Λx2.
              State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                , x2[]∷* #)) RealWorld (x1[]∷*)) ())> of
              x118125773[Level 1,[],{}]∷Bang_ (IO@(Λx1.
                ST@(Λx1.Λx2.
                State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                  , x2[]∷* #)) RealWorld (x1[]∷*)) ()) →
                case __[Level 1,[],{}]∷(# RealWorld_
                                       , Bang_ (Foreign.StablePtr.StablePtr (IO@(Λx1.
                                       ST@(Λx1.Λx2.
                                       State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                                         , x2[]∷* #)) RealWorld (x1[]∷*)) ())) #) <- <(wptr_t)c_newStablePtr(wptr_t) (x14767372[Level 1,[],{}]∷RealWorld_) (x118125773[Level 1,[],{}]∷Bang_ (IO@(Λx1.
                  ST@(Λx1.Λx2.
                  State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                    , x2[]∷* #)) RealWorld (x1[]∷*)) ()))∷(# RealWorld_
                                                                          , Bang_ (Foreign.StablePtr.StablePtr (IO@(Λx1.
                                                                          ST@(Λx1.
                                                                              Λx2.
                                                                          State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                                                                            , x2[]∷* #)) RealWorld (x1[]∷*)) ())) #)> of
                  (# x11782561[Level 1,[],{}]∷RealWorld_
                  , x66063507[Level 1,[],{}]∷Bang_ (Foreign.StablePtr.StablePtr (IO@(Λx1.
                  ST@(Λx1.Λx2.
                  State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                    , x2[]∷* #)) RealWorld (x1[]∷*)) ())) #) →
                    let
                      x25286606[Arity 0 False,ArT,CLevel (Level 1),L,<0,[]>,Level 1,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷Foreign.StablePtr.StablePtr (IO@(Λx1.
                        ST@(Λx1.Λx2.
                        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                          , x2[]∷* #)) RealWorld (x1[]∷*)) ()) =
                        <fromBang_ (x66063507[Level 1,[],{}]∷Bang_ (Foreign.StablePtr.StablePtr (IO@(Λx1.
                        ST@(Λx1.Λx2.
                        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                          , x2[]∷* #)) RealWorld (x1[]∷*)) ())))∷Foreign.StablePtr.StablePtr (IO@(Λx1.
                        ST@(Λx1.Λx2.
                        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                          , x2[]∷* #)) RealWorld (x1[]∷*)) ())>;
                      in
                      case <toBang_ (x25286606[Arity 0 False,ArT,CLevel (Level 1),L,<0,[]>,Level 1,[],UseInfo {useOccurance = Many, minimumArgs = 0},{},⊤]∷Foreign.StablePtr.StablePtr (IO@(Λx1.
                        ST@(Λx1.Λx2.
                        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                          , x2[]∷* #)) RealWorld (x1[]∷*)) ()))∷Bang_ (Foreign.StablePtr.StablePtr (IO@(Λx1.
                        ST@(Λx1.Λx2.
                        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                          , x2[]∷* #)) RealWorld (x1[]∷*)) ()))> of
                        x102939994[Level 1,[],{}]∷Bang_ (Foreign.StablePtr.StablePtr (IO@(Λx1.
                          ST@(Λx1.Λx2.
                          State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                            , x2[]∷* #)) RealWorld (x1[]∷*)) ())) →
                          case __[Level 1,[],{}]∷(# RealWorld_
                                                 , Bang_ (IO@(Λx1.
                                                 ST@(Λx1.Λx2.
                                                 State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                                                   , x2[]∷* #)) RealWorld (x1[]∷*)) ()) #) <- <(wptr_t)c_derefStablePtr(wptr_t) (x11782561[Level 1,[],{}]∷RealWorld_) (x102939994[Level 1,[],{}]∷Bang_ (Foreign.StablePtr.StablePtr (IO@(Λx1.
                            ST@(Λx1.Λx2.
                            State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                              , x2[]∷* #)) RealWorld (x1[]∷*)) ())))∷(# RealWorld_
                                                                                     , Bang_ (IO@(Λx1.
                                                                                     ST@(Λx1.
                                                                                         Λx2.
                                                                                     State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                                                                                       , x2[]∷* #)) RealWorld (x1[]∷*)) ()) #)> of
                            (# x57580220[Level 1,[],{}]∷RealWorld_
                            , x62470114[Level 1,[],{}]∷Bang_ (IO@(Λx1.
                            ST@(Λx1.Λx2.
                            State_ (x1[]∷*) → (# State_ (x1[]∷*)
                                              , x2[]∷* #)) RealWorld (x1[]∷*)) ()) #) →
                              x57580220[Level 1,[],{}]∷RealWorld_;∷RealWorld_;∷RealWorld_;∷RealWorld_;∷RealWorld_;∷RealWorld_

[[]]
theMain$2 :: Πx36893216[]∷String.Πx83084204[]∷RealWorld_. (# RealWorld_, () #)
theMain$2 :: Πx36893216[Level 1,[],{}]∷String.
             Πx83084204[L,Level 2,[],{}]∷RealWorld_.
    (# RealWorld_, () #)
theMain$2 = λx36893216[Level 1,[],{}]∷String.
            λx83084204[L,Level 2,[],{}]∷RealWorld_.
    case (Instance@.iJhc.Show.show.default[Arity 1 False,\ArT,<1,[L]>,[_INSTANCE],UseInfo {useOccurance = Many, minimumArgs = 1},λJhc.Type.Basic.Char(⊤):⊤]∷String → String) (x36893216[Level 1,[],{}]∷String) of
      x119015109[<0,[]>,Level 2,[],{}]∷String →
        (Prelude.IO.putStrLn[Arity 2 False,\\ArT,<2,[S,L]>,[],UseInfo {useOccurance = Many, minimumArgs = 2},λλ(#2#)(⊤,Jhc.Prim.Prim.())]∷String → IO@(Λx1.
        ST@(Λx1.Λx2.
        State_ (x1[]∷*) → (# State_ (x1[]∷*)
                          , x2[]∷* #)) RealWorld (x1[]∷*)) ()) (x119015109[<0,[]>,Level 2,[],{}]∷String) (x83084204[L,Level 2,[],{}]∷RealWorld_);∷(# RealWorld_
                                                                                                                                                  , () #)
MainEntry: theMain

